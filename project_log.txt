Start: Wed Sep 11 08:00:02 MDT 2013
Stop:  Wed Sep 11 08:20:49 MDT 2013
Total: ~0:20

This is to help me keep track of the project, and so that I don't have
to clutter up the git commit with these longer entries.

Today I'm working on implementing the backprop algorithm. I'm using
that PDF series I found. Once I get that working I'll write some tests
using the examples in the PDF.
.

Start: Thu Sep 12 17:29:03 MDT 2013
Stop:  Thu Sep 12 20:32:24 MDT 2013
Subtractions: 1:00
Total: ~2:00

Finished writing a crude back propogation algorithm! The interface is
very messy, but it passed the tests. Now that I've got the very basics
of the network working, I'll try my network model out on some more
complicated examples, and test doing "real" learning with it. For fun,
I could teach it to play tic-tac-toe.

I'm wanting to rewrite the network simulator. The model I've got right
now is kinda messy and probably fairly inefficent. I think I'll try
writing another closure-based network system, but this time do it
better.

Eventually, I'd like to write the network with closures that compile
into some nice, fast code. I might wait to do this until after I've
got other elements of this project working, such as the chess engine
and the Negascout framework.
.

Start: Sat Sep 14 17:42:30 MDT 2013
Stop:  Sat Sep 14 20:34:51 MDT 2013
Total: ~3:00

I didn't like how ugly the closure nodes looked, so I started working
on a version that uses scheme macros. To do this, I picked a syntax
for the networks that I liked better than the old syntax, and then
basically wrote my own Domain Specific Language to implement the new
syntax.

I haven't ever done much work with Scheme's pattern matching
macros. I've used Common Lisp's macros extensivly, and thanks to Paul
Graham's book "On Lisp", I got to the point where I wrote an extremely
complex macro system that allowed me to write a very concise natural
language parser. (By concise I mean it had minimal boiler plate and
was easy to read.) The macros I'm writing for this are the largest
I've written to date (in Scheme of course), but they are far from the
most complex out there.
.

Start: Sat Sep 14 21:17:45 MDT 2013
Stop:  Sat Sep 14 23:25:43 MDT 2013
Subtractions: 0:10
Total: ~2:00

I got back propagation working with my macro tests!! For one day, I've
done a lot. I'm going to go to bed now...
.

Start: Mon Sep 16 20:55:00 MDT 2013
Stop:  Mon Sep 16 22:00:47 MDT 2013
Total: 1:05

Working on doing character recognition. Not going so well... I don't
know what's wrong. I need to debug this before I move onto my chess
engines etc.
.

Start: Tue Sep 17 19:41:31 MDT 2013
Stop:  Tue Sep 17 20:57:54 MDT 2013
Subractions: 0:00
Total: ~1:00

Debugging the character recognition net. I wrote some simpler pattern
learning networks, which worked. I'm going to get a server and train
my character recognizer heavily.
.

Start: Wed Sep 18 08:08:18 MDT 2013
Stop:  Wed Sep 18 08:21:49 MDT 2013
Total: 0:13

Worked on compiling the net into closures.
.

Start: Thu Sep 19 19:16:39 MDT 2013
Stop:  Thu Sep 19 19:21:22 MDT 2013
Start: Thu Sep 19 20:32:48 MDT 2013
Stop:  Thu Sep 19 22:19:47 MDT 2013
Total: ~1:45

Worked on debugging the new system. I've fixed quite a few minor bugs,
but I have no idea as to how many I've got left. Right now the values
for nodes (at least the output nodes) are not being set
correctly. Obviously, this is a problem as I query those nodes to get
the output of the neural net. I'm suspecting the problem is where I
have the logic for getting node values. (See the closure construction
of the nodes.)
.

Start: Fri Sep 20 20:03:01 MDT 2013
Stop:  Fri Sep 20 21:45:30 MDT 2013

Major debug session. Still not working. I'm absolutly mystified with a
particular problem: either I'm missing a very subtle bug with my usage
of `case', or the `case' macro (or even worse, something even more
low-level) has a bug in it. The bug appeared when I added a `let'
arround the place where I'm using `case'... I'm considering replacing
my usage of `case' with a `cond' expression so I can poke around in
the internals a bit more.
.

Start: Sat Sep 21 15:55:32 MDT 2013
Stop:  Sat Sep 21 17:38:02 MDT 2013

Got compiling into closures working. I need to do a speed trial, and
try out my character recognition with the new system.

That was one heck of a debug session!
.

Start: Sat Sep 21 20:51:32 MDT 2013
Stop:  Sat Sep 21 21:40:02 MDT 2013

Going to do some profiling.

...

I am absolutely mystified as to why on earth the new compiled macros
are running slower than the old ones. ?!! I need a profiler. Bad.
.

Start: Tue Sep 24 17:57:57 MDT 2013
Stop:  Tue Sep 24 19:10:03 MDT 2013

I'm going to try writing my feed-forward networks with matricies. This
should be pretty dang fast if I can code it right.
.

Start: Wed Sep 25 07:40:15 MDT 2013
Stop:  Wed Sep 25 08:20:56 MDT 2013

More work on ff-networks with matricies. There are no native matricies
for MIT Scheme, so I have to implement them myself with the native
vectors.
.

Start: Thu Sep 26 18:33:58 MDT 2013
Stop:  Thu Sep 26 20:02:00 MDT 2013

Working on implementing the backprop algorithm with matricies.
.

Start: Mon Sep 30 16:12:20 MDT 2013
Stop:  Mon Sep 30 19:17:13 MDT 2013

Ditto.

I'm still getting some errors. My calculation of the value
"forward-errors" on line 152 does not match the correct
algorithm. Compare with (δαWAα + δβWAβ) and friends on page 19 of
chapter 3 of the neural net tutorial PDFs.

I'm too tired right now to figure out the correct matrix
computations.
.

Start: Tue Oct  1 20:28:32 MDT 2013
Stop:  Tue Oct  1 21:08:36 MDT 2013
Start: Tue Oct  1 21:19:18 MDT 2013
Stop:  Tue Oct  1 21:24:52 MDT 2013

Still working on backprop algorithm.

IT'S WORKING!!! I think...

Nope. Something is still wrong.
.
